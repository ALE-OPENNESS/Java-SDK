
plugins {
	id 'java'
	id 'maven-publish'
	id 'signing'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'org.slf4j:slf4j-api:1.7.32'
}

java.sourceCompatibility = JavaVersion.VERSION_16


javadoc {
    source = sourceSets.main.allJava
	exclude( "**/internal/**" )
	exclude( "com/ale/o2g/util/**" )
	options.memberLevel = JavadocMemberLevel.PUBLIC
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'io.github.ale-openness.o2g'
            artifactId = 'o2g-sdk'
            version = '1.1.7'

            from components.java
            artifact sourcesJar
            artifact javadocJar

			pom {
                name = 'o2g-sdk'
                description = 'A java sdk for O2G'
                url = 'https://github.com/ALE-OPENNESS/Java-SDK'
                licenses {

                    license {
	                    name = 'MIT License'
	                    url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
				developers {
                    developer {
                        id = 'fredmab'
                        name = 'Frederic Mabileau'
                        email = 'frederic.mabileau@al-enterprise.com'
                    }
                }                
                scm {
                	connection = 'scm:git:https://github.com/ALE-OPENNESS/Java-SDK'
                	developerConnection = 'scm:git:https://github.com/ALE-OPENNESS/Java-SDK'
                	url = 'https://github.com/ALE-OPENNESS/Java-SDK'
                }
            }
        }
 	}
    repositories {
    	maven {
    		name 'ossrh'
    		url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
    		credentials {
            	username = ossrhUsername
            	password = ossrhPassword
        	}
    	}
    }
}


signing {
//    sign configurations.archives
    sign publishing.publications.mavenJava
}

