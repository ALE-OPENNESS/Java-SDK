/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'maven-publish'
	id 'java'
 	id 'signing'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'org.slf4j:slf4j-api:1.7.32'
}

java.sourceCompatibility = JavaVersion.VERSION_16

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

javadoc {
    source = sourceSets.main.allJava
	exclude( "**/internal/**" )
	exclude( "com/ale/o2g/util/**" )
	options.memberLevel = JavadocMemberLevel.PUBLIC
}

signing {
    sign configurations.archives
}

publishing {
    publications {
        maven(MavenPublication) {
			customizePom(pom)
			group = 'io.github.ale-openness.o2g'
			version = '1.0.0'
            
			from components.java
			
			pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }
			
			artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }
			
			project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }
    }
	repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username frederic.mabileau@al-enterprise.com
                password FredMab1207;
            }
        }
    }
}


def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

			description 'A java SDK to access O2G services'
			url 'https://github.com/ALE-OPENNESS/Java-SDK'

            licenses {
                license {
                    name 'MIT License'
                    url 'http://www.opensource.org/licenses/mit-license.php'
                    distribution 'repo'
                }
            }
        }
    }
}